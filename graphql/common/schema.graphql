type Query {
  lunch(token: String!): Lunch
}

type Lunch {
  todayLunch: [TodayLunch]
  lunchStatus: LunchStatus
  isConfirmed: Boolean
  previousPicks: [Meal]
}

type TodayLunch {
  _id: ID
  status: LunchStatus
  created_at: String
  meals: [LunchMeal]
}

type LunchMeal {
  _id: ID
  name: String
  imageUrl: String
  pickers: [PickerConfirm]
}

type PickerConfirm {
  account_id: ID
  isConfirmed: Boolean
}

type Meal {
  _id: ID
  name: String
  imageUrl: String
}

type User {
  _id: String
  username: String
  email: String
  fullname: String
}

input SearchInput {
  pattern: String!
  page: Int
  perPage: Int
}

enum LunchStatus {
  PREPARING,
  ORDERING,
  COOKING,
  DELIVERING
}